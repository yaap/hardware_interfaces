// Signature format: 2.0
package aidl.android.hardware.bluetooth.audio.hfp.setting {

  public enum CodecType {
    method public String getRawName();
    enum_constant public static final aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType CVSD;
    enum_constant public static final aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType LC3;
    enum_constant public static final aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType MSBC;
  }

  public class Configuration {
    ctor public Configuration();
    method public aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType getCodec();
    method public String getInputPathConfiguration();
    method public String getInputTransportConfiguration();
    method public int getMaxLatencyMs();
    method public String getName();
    method public String getOutputPathConfiguration();
    method public String getOutputTransportConfiguration();
    method public int getPacketTypes();
    method public short getRetransmissionEffort();
    method public boolean getUseControllerCodec();
    method public void setCodec(aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType);
    method public void setInputPathConfiguration(String);
    method public void setInputTransportConfiguration(String);
    method public void setMaxLatencyMs(int);
    method public void setName(String);
    method public void setOutputPathConfiguration(String);
    method public void setOutputTransportConfiguration(String);
    method public void setPacketTypes(int);
    method public void setRetransmissionEffort(short);
    method public void setUseControllerCodec(boolean);
  }

  public class HfpOffloadSetting {
    ctor public HfpOffloadSetting();
    method public java.util.List<aidl.android.hardware.bluetooth.audio.hfp.setting.Configuration> getConfiguration();
    method public java.util.List<aidl.android.hardware.bluetooth.audio.hfp.setting.PathConfiguration> getPathConfiguration();
    method public java.util.List<aidl.android.hardware.bluetooth.audio.hfp.setting.TransportConfiguration> getTransportConfiguration();
  }

  public class PathConfiguration {
    ctor public PathConfiguration();
    method public long getBandwidth();
    method public aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType getCodec();
    method public int getCodedDataSize();
    method public short getDataPath();
    method public String getName();
    method public short getPcmDataFormat();
    method public short getPcmPayloadMsbPosition();
    method public short getTransportUnitSize();
    method public void setBandwidth(long);
    method public void setCodec(aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType);
    method public void setCodedDataSize(int);
    method public void setDataPath(short);
    method public void setName(String);
    method public void setPcmDataFormat(short);
    method public void setPcmPayloadMsbPosition(short);
    method public void setTransportUnitSize(short);
  }

  public class TransportConfiguration {
    ctor public TransportConfiguration();
    method public long getBandwidth();
    method public aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType getCodec();
    method public int getCodedFrameSize();
    method public String getName();
    method public void setBandwidth(long);
    method public void setCodec(aidl.android.hardware.bluetooth.audio.hfp.setting.CodecType);
    method public void setCodedFrameSize(int);
    method public void setName(String);
  }

  public class XmlParser {
    ctor public XmlParser();
    method public static aidl.android.hardware.bluetooth.audio.hfp.setting.HfpOffloadSetting readHfpOffloadSetting(java.io.InputStream) throws javax.xml.datatype.DatatypeConfigurationException, java.io.IOException, org.xmlpull.v1.XmlPullParserException;
    method public static String readText(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
    method public static void skip(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
  }

}

